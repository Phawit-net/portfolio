/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 Demon.glb --types --shadows 
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import type { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Demon_1: THREE.SkinnedMesh;
    Demon_2: THREE.SkinnedMesh;
    Demon_3: THREE.SkinnedMesh;
    Demon_4: THREE.SkinnedMesh;
    Trident: THREE.SkinnedMesh;
    Root: THREE.Bone;
  };
  materials: {
    Demon_Main: THREE.MeshStandardMaterial;
    Black: THREE.MeshStandardMaterial;
    Eye_White: THREE.MeshStandardMaterial;
    Eye_Black: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

type ActionName =
  | "CharacterArmature|Death"
  | "CharacterArmature|Duck"
  | "CharacterArmature|HitReact"
  | "CharacterArmature|Idle"
  | "CharacterArmature|Jump"
  | "CharacterArmature|Jump_Idle"
  | "CharacterArmature|Jump_Land"
  | "CharacterArmature|No"
  | "CharacterArmature|Punch"
  | "CharacterArmature|Run"
  | "CharacterArmature|Walk"
  | "CharacterArmature|Wave"
  | "CharacterArmature|Weapon"
  | "CharacterArmature|Yes";
interface GLTFAction extends THREE.AnimationClip {
  name: ActionName;
}
type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<
    JSX.IntrinsicElements["skinnedMesh"] | JSX.IntrinsicElements["bone"]
  >
>;

export function Demon(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>(null!);
  const { nodes, materials, animations } = useGLTF("./Demon.glb") as GLTFResult;
  const { actions } = useAnimations(animations, group);

  console.log("DEMON NODE<", nodes, actions);

  return (
    <group ref={group} {...props} dispose={null} position={[0, -0.9, 0]}>
      <group name="Root_Scene">
        <group name="RootNode">
          <group
            name="CharacterArmature"
            rotation={[-Math.PI / 2, 0, 0]}
            scale={50}
          >
            <primitive object={nodes.Root} />
          </group>
          <group name="Demon" rotation={[-Math.PI / 2, 0, 0]} scale={50}>
            <skinnedMesh
              name="Demon_1"
              geometry={nodes.Demon_1.geometry}
              material={materials.Demon_Main}
              skeleton={nodes.Demon_1.skeleton}
            />
            <skinnedMesh
              name="Demon_2"
              geometry={nodes.Demon_2.geometry}
              material={materials.Black}
              skeleton={nodes.Demon_2.skeleton}
            />
            <skinnedMesh
              name="Demon_3"
              geometry={nodes.Demon_3.geometry}
              material={materials.Eye_White}
              skeleton={nodes.Demon_3.skeleton}
            />
            <skinnedMesh
              name="Demon_4"
              geometry={nodes.Demon_4.geometry}
              material={materials.Eye_Black}
              skeleton={nodes.Demon_4.skeleton}
            />
          </group>
          <skinnedMesh
            name="Trident"
            geometry={nodes.Trident.geometry}
            material={materials.Black}
            skeleton={nodes.Trident.skeleton}
            position={[1.895, 1.734, -0.17]}
            scale={75.326}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("./Demon.glb");
